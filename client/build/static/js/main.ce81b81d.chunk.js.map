{"version":3,"sources":["constants.js","ServiceCall.jsx","ExpandableDetail.jsx","QueryDetail.jsx","postman.js","App.jsx","index.js"],"names":["content","ServiceCall","url","method","headers","body","Table","size","hover","variant","style","width","collapsed","displayDataTypes","name","src","theme","styles","queryContainer","overflow","padding","queryText","backgroundColor","flex","marginRight","color","dangerBackground","ExpandableDetail","isDanger","id","props","useState","isToggled","setIsToggled","Accordion","as","Card","bg","border","Toggle","Header","eventKey","onClick","Container","Row","Col","textAlign","Collapse","noGutters","md","Button","navigator","clipboard","writeText","QueryDetail","request","query","variables","height","generateItem","header","Object","keys","map","key","value","mode","raw","maxHeight","incomingQueriesHeader","display","flexDirection","justifyContent","paddingBottom","incomingQueriesCard","alignItems","contentRow","App","requests","setRequests","useEffect","io","connect","on","prevRequests","margin","text","alignSelf","Tab","className","ListGroup","Body","Title","index","timeStamp","error","Item","action","fontWeight","moment","format","Content","serviceCalls","console","log","Pane","JSON","stringify","marginBottom","paddingTop","postmanRequest","collection","info","schema","item","generatePostman","serviceCall","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce81b81d.chunk.js","sourcesContent":["export const content = {\n    queryDetails: 'Query Details',\n    queryErrorMessage: 'An error was thrown while executing this query.',\n    serviceCalls: 'Service Calls',\n    copyPostman: 'Copy Postman Request',\n    title: 'GraphQL Service Logger',\n    incomingQueries: 'Incoming Queries',\n    deleteButton: 'Delete All',\n    queryHeader: 'Query',\n    copyButton: 'Copy',\n    requestIdHeader: 'Request ID',\n    variablesHeader: 'Variables',\n    headersHeader: 'Headers',\n    urlHeader: 'URL',\n    methodHeader: 'Method',\n    bodyHeader: 'Body',\n}\n\nexport const spacing = 16\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport ReactJson from 'react-json-view'\n\nimport { content } from './constants'\n\n\nexport function ServiceCall ({ url, method, headers, body }) {\n    return (\n        <Table size=\"sm\" hover variant=\"dark\">\n            <tbody>\n                <tr>\n                    <td style={{ width: 100 }}>{content.urlHeader}</td>\n                    <td>{url}</td>\n                </tr>\n                <tr>\n                    <td>{content.methodHeader}</td>\n                    <td>{method}</td>\n                </tr>\n                <tr>\n                    <td>{content.headersHeader}</td>\n                    <td>\n                        <ReactJson\n                            collapsed={true}\n                            displayDataTypes={false}\n                            name={false}\n                            src={headers}\n                            theme=\"twilight\"\n                        />\n                    </td>\n                </tr>\n                {body && (\n                    <tr>\n                        <td>{content.bodyHeader}</td>\n                        <td>{body}</td>\n                    </tr>\n                )}\n            </tbody>\n        </Table>\n    )\n}","import React, { useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { content, spacing } from './constants'\n\nconst styles = {\n  queryContainer: {\n    width: '100%',\n    overflow: 'auto',\n    padding: spacing,\n  },\n  queryText: {\n    backgroundColor: '#1e1e1e',\n    flex: 1,\n    padding: spacing,\n    marginRight: spacing,\n    color: 'white'\n  },\n  dangerBackground: {\n    backgroundColor: '#721C25'\n  }\n}\n\n\nexport function ExpandableDetail ({\n  isDanger,\n  id,\n  body,\n  ...props\n}) {\n  const [ isToggled, setIsToggled ] = useState(false) \n\n  return (\n    <Accordion\n      as={Card}\n      bg={isDanger ? 'danger' : 'dark'}\n      border={isDanger ? 'danger' : 'secondary'}\n      {...props}\n    >\n      <Accordion.Toggle\n        as={Card.Header}\n        eventKey={`expandable-detail-${id}`}\n        onClick={() => setIsToggled(!isToggled)}\n      >\n        <Container>\n          <Row >\n            <Col style={{ textAlign: 'left' }}>{id}</Col>\n            <Col style={{ textAlign: 'right' }}>\n              {`${isToggled ? '▼' : '▶'}`}\n            </Col>\n          </Row>\n        </Container>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={`expandable-detail-${id}`}>\n        <Row noGutters style={styles.queryContainer}>\n          <Col md=\"11\">\n            <pre\n              style={{\n                ...styles.queryText,\n                ...(isDanger ? styles.dangerBackground : {})\n              }}\n            >\n              {body}\n            </pre>\n          </Col>\n          <Col md=\"1\">\n            <Button\n              onClick={() => navigator.clipboard.writeText(body)}\n              style={{ width: '100%' }}\n              variant=\"secondary\"\n            >\n              {content.copyButton}\n            </Button>\n          </Col>\n        </Row>\n      </Accordion.Collapse>\n    </Accordion>\n  )\n}\n\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport ReactJson from 'react-json-view'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { content } from './constants'\nimport { ExpandableDetail } from './ExpandableDetail'\n\n\nexport function QueryDetail (request) {\n  const { id, query, variables = {}, headers = {} } = request\n\n  return (\n  <Container>\n    <Row>\n      <Col md=\"12\">\n        <ExpandableDetail\n           isDanger={false}\n           id={content.queryHeader}\n           body={query}\n        />\n      </Col>\n      <Col md=\"12\" style={{ height: '100%' }}>\n      <Table size=\"sm\" hover variant=\"dark\">\n        <tbody>\n          <tr>\n            <td style={{ width: 100 }}>{content.requestIdHeader}</td>\n            <td>{id}</td>\n          </tr>\n          <tr>\n            <td>{content.variablesHeader}</td>\n            <td>\n              <ReactJson\n                collapsed={true}\n                displayDataTypes={false}\n                name={false}\n                src={variables}\n                theme=\"twilight\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>{content.headersHeader}</td>\n            <td>\n              <ReactJson\n                collapsed={true}\n                displayDataTypes={false}\n                name={false}\n                src={headers}\n                theme=\"twilight\"\n              />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      </Col>\n    </Row>\n  </Container>\n  )\n}\n","export function generatePostman (request) {\n  const { serviceCalls = [] } = request\n  console.log(serviceCalls)\n\n  const postmanRequest = {\n    collection: {\n      info: {\n        name: `${request.name} - ID: ${request.id}`,\n        schema: 'https://schema.getpostman.com/json/collection/v2.1.0/collection.json',\n      },\n      item: serviceCalls.map(generateItem),\n    },\n  }\n\n  console.log(JSON.stringify(postmanRequest))\n\n  return JSON.stringify(postmanRequest)\n}\n\nfunction generateItem ({\n  url,\n  method,\n  headers,\n  body,\n}) {\n  const header = Object.keys(headers).map((key) => ({ key, value: headers[key] }))\n\n  const request = {\n    url,\n    method,\n    header,\n  }\n\n  if (body) {\n    request.body = {\n      mode: 'raw',\n      raw: body,\n    }\n  }\n\n  return { request }\n}","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\nimport Tab from 'react-bootstrap/Tab'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport JumboTron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport io from 'socket.io-client'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ServiceCall } from './ServiceCall'\nimport { QueryDetail } from './QueryDetail'\nimport { generatePostman } from './postman'\nimport { content, spacing } from './constants'\nimport { ExpandableDetail } from './ExpandableDetail'\nimport testData from './testdata.json'\n\n\nconst styles = {\n  maxHeight: { height: '100%' },\n  incomingQueriesHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: spacing,\n  },\n  incomingQueriesCard: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch'\n  },\n  contentRow: { justifyContent: 'center', height: '60vh' },\n}\n\nexport function App(props) {\n  const [ requests, setRequests ] = useState([] )\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      setRequests(testData)\n      return\n    }\n\n    const socket = io.connect('http://localhost:5000')    \n    socket.on('request',(request) => {\n      setRequests((prevRequests) => [ request, ...prevRequests ]) \n    })\n  }, [])\n\n  const renderRequest = (\n    {\n      id,\n      name,\n      timeStamp,\n      error,\n    },\n    index\n  ) => {    \n    return (\n      <ListGroup.Item\n        action\n        eventKey={id}\n        variant={!error ? \"dark\" : \"danger\"}\n      >\n        <Container>\n          <Row>\n            <Col style={{ fontWeight: 'bold' }}>\n              {name}\n            </Col>\n            <Col style={{ textAlign: 'right' }}>\n              {moment(timeStamp).format('h:mm:ss a MM/DD')}\n            </Col>\n          </Row>\n        </Container>\n      </ListGroup.Item>\n    )  \n  }\n\n  const renderDetail = (request) => {\n    const { id, serviceCalls, error } = request\n\n    console.log(!!error)\n    return (\n      <Tab.Pane style={styles.maxHeight} eventKey={id}>\n        <Card style={{ ...styles.maxHeight, overflow: 'auto' }} bg=\"dark\" text=\"white\">\n          <Card.Body>\n            <Card.Title>{content.queryDetails}</Card.Title>\n            {!!error  &&\n            <Container>\n              <ExpandableDetail\n                isDanger\n                id='Error'\n                body={JSON.stringify(error, null, 4)}\n                style={{ marginBottom: spacing }}\n              />\n            </Container>\n            }\n            <QueryDetail {...request} />\n            <Container>\n              <Card.Title style={{ paddingTop: spacing }}>{content.serviceCalls}</Card.Title>\n              <Button\n                style={{ marginBottom: spacing }}\n                variant=\"secondary\"\n                onClick={() => navigator.clipboard.writeText(generatePostman(request))}\n              >\n                {content.copyPostman}\n              </Button>\n            </Container>\n            <Container>\n              {serviceCalls.map((serviceCall) => {\n                return (\n                  <>\n                    <ServiceCall {...serviceCall} />\n                    <br />\n                  </>\n                )\n              })}\n            </Container>\n          </Card.Body>\n        </Card>\n      </Tab.Pane>\n    )\n  }\n\n  const onDeleteAll = () => {\n    setRequests([])\n  }\n\n  return (\n    <div style={{ margin: spacing }}>\n      <JumboTron as={Card} bg=\"dark\" text=\"white\">\n        <h1 style={{ alignSelf: 'center' }}>{content.title}</h1>\n      </JumboTron>\n      <Tab.Container>\n        <Row style={styles.contentRow}>\n          <Col className=\"test\" style={styles.maxHeight} md={4}>\n            <ListGroup\n              as={Card}\n              bg=\"dark\"\n              text=\"white\"\n              style={styles.maxHeight}\n            >\n              <Card.Body style={styles.incomingQueriesCard}>\n                <div style={styles.incomingQueriesHeader}>\n                  <Card.Title>{content.incomingQueries}</Card.Title>\n                  <Button onClick={onDeleteAll} variant=\"danger\">{content.deleteButton}</Button>\n                </div>\n                <div style={{ overflow: 'auto' }}>\n                  {requests.map(renderRequest)}\n                </div>\n              </Card.Body>\n            </ListGroup>\n          </Col>\n          <Col style={styles.maxHeight} md={8}>\n            <Tab.Content style={styles.maxHeight}>\n              {requests.map(renderDetail)}\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}